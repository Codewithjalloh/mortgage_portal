{"ast":null,"code":"var _jsxFileName = \"/Users/jalloh/Documents/Client Projects/Mortgage Portal /src/components/cases/CreateCase.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Box, Typography, Paper, Grid, TextField, Button, MenuItem, FormControl, InputLabel, Select, Divider, Alert, FormControlLabel, Switch, Container, Stepper, Step, StepLabel, Card, CardContent, Stack } from '@mui/material';\nimport { Home as HomeIcon, Person as PersonIcon, Work as WorkIcon, AccountBalance as BankIcon, Description as DocumentIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  caseType: Yup.string().required('Case type is required'),\n  description: Yup.string().required('Description is required'),\n  propertyType: Yup.string().required('Property type is required'),\n  estimatedValue: Yup.number().required('Estimated value is required').positive('Value must be positive'),\n  loanAmount: Yup.number().required('Loan amount is required').positive('Amount must be positive'),\n  employmentStatus: Yup.string().required('Employment status is required'),\n  annualIncome: Yup.number().required('Annual income is required').positive('Income must be positive'),\n  depositAmount: Yup.number().required('Deposit amount is required').positive('Deposit must be positive'),\n  propertyAddress: Yup.string().required('Property address is required'),\n  propertyPostcode: Yup.string().required('Postcode is required').matches(/^[A-Z]{1,2}[0-9][A-Z0-9]? ?[0-9][A-Z]{2}$/i, 'Invalid UK postcode'),\n  termLength: Yup.string().required('Term length is required'),\n  interestRateType: Yup.string().required('Interest rate type is required'),\n  creditScore: Yup.number().required('Credit score is required').min(300, 'Credit score must be at least 300').max(850, 'Credit score must not exceed 850'),\n  existingMortgage: Yup.object({\n    hasExistingMortgage: Yup.boolean(),\n    currentLender: Yup.string().when('hasExistingMortgage', (hasExistingMortgage, schema) => {\n      return hasExistingMortgage ? schema.required('Current lender is required') : schema;\n    }),\n    currentBalance: Yup.number().when('hasExistingMortgage', (hasExistingMortgage, schema) => {\n      return hasExistingMortgage ? schema.required('Current balance is required').positive('Balance must be positive') : schema;\n    }),\n    currentRate: Yup.number().when('hasExistingMortgage', (hasExistingMortgage, schema) => {\n      return hasExistingMortgage ? schema.required('Current rate is required').positive('Rate must be positive') : schema;\n    }),\n    currentTerm: Yup.string().when('hasExistingMortgage', (hasExistingMortgage, schema) => {\n      return hasExistingMortgage ? schema.required('Current term is required') : schema;\n    })\n  }),\n  baseSalary: Yup.number().required('Base salary is required').positive('Amount must be positive'),\n  bonus: Yup.number().min(0, 'Amount cannot be negative'),\n  overtime: Yup.number().min(0, 'Amount cannot be negative'),\n  otherIncome: Yup.number().min(0, 'Amount cannot be negative'),\n  loans: Yup.array().of(Yup.object({\n    type: Yup.string().required('Loan type is required'),\n    amount: Yup.number().required('Amount is required').positive('Amount must be positive'),\n    monthlyPayment: Yup.number().required('Monthly payment is required').positive('Amount must be positive'),\n    remainingTerm: Yup.string().required('Remaining term is required')\n  })),\n  overdraft: Yup.number().min(0, 'Amount cannot be negative'),\n  creditCards: Yup.array().of(Yup.object({\n    provider: Yup.string().required('Provider is required'),\n    limit: Yup.number().required('Limit is required').positive('Amount must be positive'),\n    balance: Yup.number().required('Balance is required').min(0, 'Amount cannot be negative'),\n    monthlyPayment: Yup.number().required('Monthly payment is required').positive('Amount must be positive')\n  })),\n  otherLiabilities: Yup.string(),\n  additionalApplicants: Yup.array().of(Yup.object({\n    name: Yup.string().required('Name is required'),\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    employmentStatus: Yup.string().required('Employment status is required'),\n    annualIncome: Yup.number().required('Annual income is required').positive('Income must be positive'),\n    creditScore: Yup.number().required('Credit score is required').min(300, 'Credit score must be at least 300').max(850, 'Credit score must not exceed 850'),\n    baseSalary: Yup.number().required('Base salary is required').positive('Amount must be positive'),\n    bonus: Yup.number().min(0, 'Amount cannot be negative'),\n    overtime: Yup.number().min(0, 'Amount cannot be negative'),\n    otherIncome: Yup.number().min(0, 'Amount cannot be negative'),\n    loans: Yup.array().of(Yup.object({\n      type: Yup.string().required('Loan type is required'),\n      amount: Yup.number().required('Amount is required').positive('Amount must be positive'),\n      monthlyPayment: Yup.number().required('Monthly payment is required').positive('Amount must be positive'),\n      remainingTerm: Yup.string().required('Remaining term is required')\n    })),\n    overdraft: Yup.number().min(0, 'Amount cannot be negative'),\n    creditCards: Yup.array().of(Yup.object({\n      provider: Yup.string().required('Provider is required'),\n      limit: Yup.number().required('Limit is required').positive('Amount must be positive'),\n      balance: Yup.number().required('Balance is required').min(0, 'Amount cannot be negative'),\n      monthlyPayment: Yup.number().required('Monthly payment is required').positive('Amount must be positive')\n    })),\n    otherLiabilities: Yup.string()\n  }))\n});\nconst documentTypes = [{\n  value: 'id_proof',\n  label: 'ID Proof (Passport/Driving License)'\n}, {\n  value: 'address_proof',\n  label: 'Proof of Address'\n}, {\n  value: 'bank_statements',\n  label: 'Bank Statements (3 months)'\n}, {\n  value: 'payslips',\n  label: 'Payslips (3 months)'\n}, {\n  value: 'tax_returns',\n  label: 'Tax Returns (if self-employed)'\n}, {\n  value: 'p60',\n  label: 'P60'\n}, {\n  value: 'property_valuation',\n  label: 'Property Valuation Report'\n}, {\n  value: 'insurance_documents',\n  label: 'Insurance Documents'\n}, {\n  value: 'other',\n  label: 'Other Documents'\n}];\nconst initialValues = {\n  caseType: '',\n  description: '',\n  propertyType: '',\n  estimatedValue: '',\n  loanAmount: '',\n  employmentStatus: '',\n  annualIncome: '',\n  depositAmount: '',\n  propertyAddress: '',\n  propertyPostcode: '',\n  termLength: '',\n  interestRateType: '',\n  creditScore: '',\n  existingMortgage: {\n    hasExistingMortgage: false,\n    currentLender: '',\n    currentBalance: '',\n    currentRate: '',\n    currentTerm: ''\n  },\n  baseSalary: '',\n  bonus: '',\n  overtime: '',\n  otherIncome: '',\n  loans: [],\n  overdraft: '',\n  creditCards: [],\n  otherLiabilities: '',\n  additionalApplicants: [],\n  documents: documentTypes.map(docType => ({\n    id: '',\n    type: docType.value,\n    name: '',\n    file: null,\n    status: 'pending'\n  }))\n};\nconst steps = [{\n  label: 'Case Type',\n  icon: /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 31\n  }, this)\n}, {\n  label: 'Personal Details',\n  icon: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 38\n  }, this)\n}, {\n  label: 'Employment',\n  icon: /*#__PURE__*/_jsxDEV(WorkIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 32\n  }, this)\n}, {\n  label: 'Financial Information',\n  icon: /*#__PURE__*/_jsxDEV(BankIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 43\n  }, this)\n}, {\n  label: 'Documents',\n  icon: /*#__PURE__*/_jsxDEV(DocumentIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 31\n  }, this)\n}];\nconst CreateCase = () => {\n  _s();\n  const navigate = useNavigate();\n  const [activeStep, setActiveStep] = useState(0);\n  const [formData, setFormData] = useState(initialValues);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const handleNext = () => {\n    setActiveStep(prevStep => prevStep + 1);\n  };\n  const handleBack = () => {\n    setActiveStep(prevStep => prevStep - 1);\n  };\n  const handleSubmit = async () => {\n    try {\n      // In a real application, this would be an API call\n      console.log('Form submitted:', formData);\n\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Navigate to cases list on success\n      navigate('/client/cases');\n      setShowSuccess(true);\n    } catch (err) {\n      console.error('Failed to create case. Please try again.', err);\n    }\n  };\n  const handleFileUpload = (event, setFieldValue, index, currentValues) => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file) {\n      const newDocuments = [...currentValues.documents];\n      newDocuments[index] = {\n        id: Math.random().toString(36).substr(2, 9),\n        type: documentTypes[index].value,\n        name: file.name,\n        file,\n        status: 'pending'\n      };\n      setFieldValue('documents', newDocuments);\n    }\n  };\n  const handleRemoveDocument = (setFieldValue, index, currentValues) => {\n    const newDocuments = currentValues.documents.map((doc, i) => i === index ? {\n      ...doc,\n      file: null,\n      name: '',\n      status: 'pending'\n    } : doc);\n    setFieldValue('documents', newDocuments);\n  };\n  const renderStepContent = step => {\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"What type of mortgage are you looking for?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Case Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: formData.caseType,\n                onChange: e => setFormData({\n                  ...formData,\n                  caseType: e.target.value\n                }),\n                label: \"Case Type\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"firstTimeBuyer\",\n                  children: \"First Time Buyer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"remortgage\",\n                  children: \"Remortgage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"buyToLet\",\n                  children: \"Buy to Let\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"equityRelease\",\n                  children: \"Equity Release\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Property Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: formData.propertyType,\n                onChange: e => setFormData({\n                  ...formData,\n                  propertyType: e.target.value\n                }),\n                label: \"Property Type\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"house\",\n                  children: \"House\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"flat\",\n                  children: \"Flat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"bungalow\",\n                  children: \"Bungalow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"maisonette\",\n                  children: \"Maisonette\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Property Value\",\n              value: formData.estimatedValue,\n              onChange: e => setFormData({\n                ...formData,\n                estimatedValue: e.target.value\n              }),\n              InputProps: {\n                startAdornment: '£'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Loan Amount\",\n              value: formData.loanAmount,\n              onChange: e => setFormData({\n                ...formData,\n                loanAmount: e.target.value\n              }),\n              InputProps: {\n                startAdornment: '£'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this);\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Your Personal Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"First Name\",\n              value: formData.firstName,\n              onChange: e => setFormData({\n                ...formData,\n                firstName: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Last Name\",\n              value: formData.lastName,\n              onChange: e => setFormData({\n                ...formData,\n                lastName: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Email\",\n              type: \"email\",\n              value: formData.email,\n              onChange: e => setFormData({\n                ...formData,\n                email: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Phone\",\n              value: formData.phone,\n              onChange: e => setFormData({\n                ...formData,\n                phone: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Date of Birth\",\n              type: \"date\",\n              value: formData.dateOfBirth,\n              onChange: e => setFormData({\n                ...formData,\n                dateOfBirth: e.target.value\n              }),\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Employment Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Employment Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: formData.employmentStatus,\n                onChange: e => setFormData({\n                  ...formData,\n                  employmentStatus: e.target.value\n                }),\n                label: \"Employment Type\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"fullTime\",\n                  children: \"Full Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"partTime\",\n                  children: \"Part Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 554,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"selfEmployed\",\n                  children: \"Self Employed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"contractor\",\n                  children: \"Contractor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Employer Name\",\n              value: formData.employerName,\n              onChange: e => setFormData({\n                ...formData,\n                employerName: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Length of Employment\",\n              value: formData.employmentLength,\n              onChange: e => setFormData({\n                ...formData,\n                employmentLength: e.target.value\n              }),\n              helperText: \"e.g., 2 years 6 months\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Annual Income\",\n              value: formData.annualIncome,\n              onChange: e => setFormData({\n                ...formData,\n                annualIncome: e.target.value\n              }),\n              InputProps: {\n                startAdornment: '£'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Financial Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Additional Income\",\n              value: formData.otherIncome,\n              onChange: e => setFormData({\n                ...formData,\n                otherIncome: e.target.value\n              }),\n              InputProps: {\n                startAdornment: '£'\n              },\n              helperText: \"e.g., rental income, investments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Deposit Amount\",\n              value: formData.depositAmount,\n              onChange: e => setFormData({\n                ...formData,\n                depositAmount: e.target.value\n              }),\n              InputProps: {\n                startAdornment: '£'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Credit Score\",\n              value: formData.creditScore,\n              onChange: e => setFormData({\n                ...formData,\n                creditScore: e.target.value\n              }),\n              helperText: \"If known (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                checked: formData.existingMortgage.hasExistingMortgage,\n                onChange: e => setFormData({\n                  ...formData,\n                  existingMortgage: {\n                    ...formData.existingMortgage,\n                    hasExistingMortgage: e.target.checked\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 19\n              }, this),\n              label: \"I have an existing mortgage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this), formData.existingMortgage.hasExistingMortgage && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Existing Mortgage Details\",\n              value: formData.existingMortgage.currentLender,\n              onChange: e => setFormData({\n                ...formData,\n                existingMortgage: {\n                  ...formData.existingMortgage,\n                  currentLender: e.target.value\n                }\n              }),\n              multiline: true,\n              rows: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this);\n      case 4:\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Required Documents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              paragraph: true,\n              children: \"Please prepare the following documents for your application:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Stack, {\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    color: \"primary\",\n                    children: \"Identity Documents\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 702,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"\\u2022 Passport or driving license\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 707,\n                      columnNumber: 23\n                    }, this), \"\\u2022 Recent utility bill (within last 3 months)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 705,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Stack, {\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    color: \"primary\",\n                    children: \"Financial Documents\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 718,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"\\u2022 Last 3 months bank statements\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 723,\n                      columnNumber: 23\n                    }, this), \"\\u2022 Last 3 months payslips\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 725,\n                      columnNumber: 23\n                    }, this), \"\\u2022 P60 or tax return (if self-employed)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 721,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 717,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Stack, {\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    color: \"primary\",\n                    children: \"Property Documents\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 736,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"\\u2022 Property details\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 741,\n                      columnNumber: 23\n                    }, this), \"\\u2022 Current mortgage statement (if applicable)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 739,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 735,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [showSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 3\n      },\n      children: \"Your case has been created successfully! Redirecting to cases page...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Create New Case\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        paragraph: true,\n        children: \"Please fill out the following information to create your mortgage case.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        sx: {\n          mb: 4\n        },\n        children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(Step, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            icon: step.icon,\n            children: step.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 15\n          }, this)\n        }, step.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 4\n        },\n        children: renderStepContent(activeStep)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleBack,\n          disabled: activeStep === 0,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: activeStep === steps.length - 1 ? handleSubmit : handleNext,\n          children: activeStep === steps.length - 1 ? 'Submit' : 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 757,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateCase, \"ej5Z5CM+vdxrk9wzg66IS78Nhxs=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateCase;\nexport default CreateCase;\nvar _c;\n$RefreshReg$(_c, \"CreateCase\");","map":{"version":3,"names":["React","useState","useNavigate","Yup","Box","Typography","Paper","Grid","TextField","Button","MenuItem","FormControl","InputLabel","Select","Divider","Alert","FormControlLabel","Switch","Container","Stepper","Step","StepLabel","Card","CardContent","Stack","Home","HomeIcon","Person","PersonIcon","Work","WorkIcon","AccountBalance","BankIcon","Description","DocumentIcon","jsxDEV","_jsxDEV","validationSchema","object","caseType","string","required","description","propertyType","estimatedValue","number","positive","loanAmount","employmentStatus","annualIncome","depositAmount","propertyAddress","propertyPostcode","matches","termLength","interestRateType","creditScore","min","max","existingMortgage","hasExistingMortgage","boolean","currentLender","when","schema","currentBalance","currentRate","currentTerm","baseSalary","bonus","overtime","otherIncome","loans","array","of","type","amount","monthlyPayment","remainingTerm","overdraft","creditCards","provider","limit","balance","otherLiabilities","additionalApplicants","name","email","documentTypes","value","label","initialValues","documents","map","docType","id","file","status","steps","icon","fileName","_jsxFileName","lineNumber","columnNumber","CreateCase","_s","navigate","activeStep","setActiveStep","formData","setFormData","showSuccess","setShowSuccess","handleNext","prevStep","handleBack","handleSubmit","console","log","Promise","resolve","setTimeout","err","error","handleFileUpload","event","setFieldValue","index","currentValues","_event$target$files","target","files","newDocuments","Math","random","toString","substr","handleRemoveDocument","doc","i","renderStepContent","step","container","spacing","children","item","xs","variant","gutterBottom","md","fullWidth","onChange","e","InputProps","startAdornment","firstName","lastName","phone","dateOfBirth","InputLabelProps","shrink","employerName","employmentLength","helperText","control","checked","multiline","rows","color","paragraph","maxWidth","sx","mt","mb","severity","p","display","justifyContent","onClick","disabled","length","_c","$RefreshReg$"],"sources":["/Users/jalloh/Documents/Client Projects/Mortgage Portal /src/components/cases/CreateCase.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Grid,\n  TextField,\n  Button,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Select,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Divider,\n  Alert,\n  FormControlLabel,\n  Switch,\n  Snackbar,\n  Container,\n  Stepper,\n  Step,\n  StepLabel,\n  Card,\n  CardContent,\n  Stack,\n} from '@mui/material';\nimport { Delete as DeleteIcon, Add as AddIcon, Home as HomeIcon, Person as PersonIcon, Work as WorkIcon, AccountBalance as BankIcon, Description as DocumentIcon } from '@mui/icons-material';\n\ninterface Loan {\n  type: string;\n  amount: string;\n  monthlyPayment: string;\n  remainingTerm: string;\n}\n\ninterface CreditCard {\n  provider: string;\n  limit: string;\n  balance: string;\n  monthlyPayment: string;\n}\n\ninterface AdditionalApplicant {\n  name: string;\n  email: string;\n  employmentStatus?: string;\n  annualIncome?: string;\n  creditScore?: string;\n  baseSalary?: string;\n  bonus?: string;\n  overtime?: string;\n  otherIncome?: string;\n  loans: Loan[];\n  overdraft?: string;\n  creditCards: CreditCard[];\n  otherLiabilities?: string;\n}\n\ninterface Document {\n  id: string;\n  type: string;\n  name: string;\n  file: File | null;\n  uploadDate?: string;\n  status: 'pending' | 'uploaded' | 'error';\n}\n\ninterface FormValues {\n  caseType: string;\n  description: string;\n  propertyType: string;\n  estimatedValue: string;\n  loanAmount: string;\n  employmentStatus: string;\n  annualIncome: string;\n  depositAmount: string;\n  propertyAddress: string;\n  propertyPostcode: string;\n  termLength: string;\n  interestRateType: string;\n  creditScore: string;\n  existingMortgage: {\n    hasExistingMortgage: boolean;\n    currentLender?: string;\n    currentBalance?: string;\n    currentRate?: string;\n    currentTerm?: string;\n  };\n  baseSalary: string;\n  bonus: string;\n  overtime: string;\n  otherIncome: string;\n  loans: Loan[];\n  overdraft: string;\n  creditCards: CreditCard[];\n  otherLiabilities: string;\n  additionalApplicants: AdditionalApplicant[];\n  documents: Document[];\n}\n\ninterface AdditionalApplicantErrors {\n  name?: string;\n  email?: string;\n  employmentStatus?: string;\n  annualIncome?: string;\n  creditScore?: string;\n  baseSalary?: string;\n  bonus?: string;\n  overtime?: string;\n  otherIncome?: string;\n  loans?: Array<{\n    type?: string;\n    amount?: string;\n    monthlyPayment?: string;\n    remainingTerm?: string;\n  }>;\n  overdraft?: string;\n  creditCards?: Array<{\n    provider?: string;\n    limit?: string;\n    balance?: string;\n    monthlyPayment?: string;\n  }>;\n  otherLiabilities?: string;\n}\n\nconst validationSchema = Yup.object({\n  caseType: Yup.string().required('Case type is required'),\n  description: Yup.string().required('Description is required'),\n  propertyType: Yup.string().required('Property type is required'),\n  estimatedValue: Yup.number()\n    .required('Estimated value is required')\n    .positive('Value must be positive'),\n  loanAmount: Yup.number()\n    .required('Loan amount is required')\n    .positive('Amount must be positive'),\n  employmentStatus: Yup.string().required('Employment status is required'),\n  annualIncome: Yup.number()\n    .required('Annual income is required')\n    .positive('Income must be positive'),\n  depositAmount: Yup.number()\n    .required('Deposit amount is required')\n    .positive('Deposit must be positive'),\n  propertyAddress: Yup.string().required('Property address is required'),\n  propertyPostcode: Yup.string()\n    .required('Postcode is required')\n    .matches(/^[A-Z]{1,2}[0-9][A-Z0-9]? ?[0-9][A-Z]{2}$/i, 'Invalid UK postcode'),\n  termLength: Yup.string().required('Term length is required'),\n  interestRateType: Yup.string().required('Interest rate type is required'),\n  creditScore: Yup.number()\n    .required('Credit score is required')\n    .min(300, 'Credit score must be at least 300')\n    .max(850, 'Credit score must not exceed 850'),\n  existingMortgage: Yup.object({\n    hasExistingMortgage: Yup.boolean(),\n    currentLender: Yup.string().when('hasExistingMortgage', (hasExistingMortgage, schema) => {\n      return hasExistingMortgage ? schema.required('Current lender is required') : schema;\n    }),\n    currentBalance: Yup.number().when('hasExistingMortgage', (hasExistingMortgage, schema) => {\n      return hasExistingMortgage ? schema.required('Current balance is required').positive('Balance must be positive') : schema;\n    }),\n    currentRate: Yup.number().when('hasExistingMortgage', (hasExistingMortgage, schema) => {\n      return hasExistingMortgage ? schema.required('Current rate is required').positive('Rate must be positive') : schema;\n    }),\n    currentTerm: Yup.string().when('hasExistingMortgage', (hasExistingMortgage, schema) => {\n      return hasExistingMortgage ? schema.required('Current term is required') : schema;\n    }),\n  }),\n  baseSalary: Yup.number()\n    .required('Base salary is required')\n    .positive('Amount must be positive'),\n  bonus: Yup.number()\n    .min(0, 'Amount cannot be negative'),\n  overtime: Yup.number()\n    .min(0, 'Amount cannot be negative'),\n  otherIncome: Yup.number()\n    .min(0, 'Amount cannot be negative'),\n  loans: Yup.array().of(\n    Yup.object({\n      type: Yup.string().required('Loan type is required'),\n      amount: Yup.number()\n        .required('Amount is required')\n        .positive('Amount must be positive'),\n      monthlyPayment: Yup.number()\n        .required('Monthly payment is required')\n        .positive('Amount must be positive'),\n      remainingTerm: Yup.string().required('Remaining term is required'),\n    })\n  ),\n  overdraft: Yup.number()\n    .min(0, 'Amount cannot be negative'),\n  creditCards: Yup.array().of(\n    Yup.object({\n      provider: Yup.string().required('Provider is required'),\n      limit: Yup.number()\n        .required('Limit is required')\n        .positive('Amount must be positive'),\n      balance: Yup.number()\n        .required('Balance is required')\n        .min(0, 'Amount cannot be negative'),\n      monthlyPayment: Yup.number()\n        .required('Monthly payment is required')\n        .positive('Amount must be positive'),\n    })\n  ),\n  otherLiabilities: Yup.string(),\n  additionalApplicants: Yup.array().of(\n    Yup.object({\n      name: Yup.string().required('Name is required'),\n      email: Yup.string().email('Invalid email').required('Email is required'),\n      employmentStatus: Yup.string().required('Employment status is required'),\n      annualIncome: Yup.number()\n        .required('Annual income is required')\n        .positive('Income must be positive'),\n      creditScore: Yup.number()\n        .required('Credit score is required')\n        .min(300, 'Credit score must be at least 300')\n        .max(850, 'Credit score must not exceed 850'),\n      baseSalary: Yup.number()\n        .required('Base salary is required')\n        .positive('Amount must be positive'),\n      bonus: Yup.number()\n        .min(0, 'Amount cannot be negative'),\n      overtime: Yup.number()\n        .min(0, 'Amount cannot be negative'),\n      otherIncome: Yup.number()\n        .min(0, 'Amount cannot be negative'),\n      loans: Yup.array().of(\n        Yup.object({\n          type: Yup.string().required('Loan type is required'),\n          amount: Yup.number()\n            .required('Amount is required')\n            .positive('Amount must be positive'),\n          monthlyPayment: Yup.number()\n            .required('Monthly payment is required')\n            .positive('Amount must be positive'),\n          remainingTerm: Yup.string().required('Remaining term is required'),\n        })\n      ),\n      overdraft: Yup.number()\n        .min(0, 'Amount cannot be negative'),\n      creditCards: Yup.array().of(\n        Yup.object({\n          provider: Yup.string().required('Provider is required'),\n          limit: Yup.number()\n            .required('Limit is required')\n            .positive('Amount must be positive'),\n          balance: Yup.number()\n            .required('Balance is required')\n            .min(0, 'Amount cannot be negative'),\n          monthlyPayment: Yup.number()\n            .required('Monthly payment is required')\n            .positive('Amount must be positive'),\n        })\n      ),\n      otherLiabilities: Yup.string(),\n    })\n  ),\n});\n\nconst documentTypes = [\n  { value: 'id_proof', label: 'ID Proof (Passport/Driving License)' },\n  { value: 'address_proof', label: 'Proof of Address' },\n  { value: 'bank_statements', label: 'Bank Statements (3 months)' },\n  { value: 'payslips', label: 'Payslips (3 months)' },\n  { value: 'tax_returns', label: 'Tax Returns (if self-employed)' },\n  { value: 'p60', label: 'P60' },\n  { value: 'property_valuation', label: 'Property Valuation Report' },\n  { value: 'insurance_documents', label: 'Insurance Documents' },\n  { value: 'other', label: 'Other Documents' },\n];\n\nconst initialValues: FormValues = {\n  caseType: '',\n  description: '',\n  propertyType: '',\n  estimatedValue: '',\n  loanAmount: '',\n  employmentStatus: '',\n  annualIncome: '',\n  depositAmount: '',\n  propertyAddress: '',\n  propertyPostcode: '',\n  termLength: '',\n  interestRateType: '',\n  creditScore: '',\n  existingMortgage: {\n    hasExistingMortgage: false,\n    currentLender: '',\n    currentBalance: '',\n    currentRate: '',\n    currentTerm: '',\n  },\n  baseSalary: '',\n  bonus: '',\n  overtime: '',\n  otherIncome: '',\n  loans: [],\n  overdraft: '',\n  creditCards: [],\n  otherLiabilities: '',\n  additionalApplicants: [],\n  documents: documentTypes.map(docType => ({\n    id: '',\n    type: docType.value,\n    name: '',\n    file: null,\n    status: 'pending'\n  })),\n};\n\nconst steps = [\n  { label: 'Case Type', icon: <HomeIcon /> },\n  { label: 'Personal Details', icon: <PersonIcon /> },\n  { label: 'Employment', icon: <WorkIcon /> },\n  { label: 'Financial Information', icon: <BankIcon /> },\n  { label: 'Documents', icon: <DocumentIcon /> },\n];\n\nconst CreateCase: React.FC = () => {\n  const navigate = useNavigate();\n  const [activeStep, setActiveStep] = useState(0);\n  const [formData, setFormData] = useState<FormValues>(initialValues);\n  const [showSuccess, setShowSuccess] = useState(false);\n\n  const handleNext = () => {\n    setActiveStep((prevStep) => prevStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevStep) => prevStep - 1);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      // In a real application, this would be an API call\n      console.log('Form submitted:', formData);\n      \n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Navigate to cases list on success\n      navigate('/client/cases');\n      setShowSuccess(true);\n    } catch (err) {\n      console.error('Failed to create case. Please try again.', err);\n    }\n  };\n\n  const handleFileUpload = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    setFieldValue: (field: string, value: any) => void,\n    index: number,\n    currentValues: FormValues\n  ) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      const newDocuments = [...currentValues.documents];\n      newDocuments[index] = {\n        id: Math.random().toString(36).substr(2, 9),\n        type: documentTypes[index].value,\n        name: file.name,\n        file,\n        status: 'pending',\n      };\n      setFieldValue('documents', newDocuments);\n    }\n  };\n\n  const handleRemoveDocument = (\n    setFieldValue: (field: string, value: any) => void,\n    index: number,\n    currentValues: FormValues\n  ) => {\n    const newDocuments = currentValues.documents.map((doc, i) => \n      i === index ? { ...doc, file: null, name: '', status: 'pending' } : doc\n    );\n    setFieldValue('documents', newDocuments);\n  };\n\n  const renderStepContent = (step: number) => {\n    switch (step) {\n      case 0:\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\" gutterBottom>\n                What type of mortgage are you looking for?\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <FormControl fullWidth>\n                <InputLabel>Case Type</InputLabel>\n                <Select\n                  value={formData.caseType}\n                  onChange={(e) => setFormData({\n                    ...formData,\n                    caseType: e.target.value,\n                  })}\n                  label=\"Case Type\"\n                >\n                  <MenuItem value=\"firstTimeBuyer\">First Time Buyer</MenuItem>\n                  <MenuItem value=\"remortgage\">Remortgage</MenuItem>\n                  <MenuItem value=\"buyToLet\">Buy to Let</MenuItem>\n                  <MenuItem value=\"equityRelease\">Equity Release</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <FormControl fullWidth>\n                <InputLabel>Property Type</InputLabel>\n                <Select\n                  value={formData.propertyType}\n                  onChange={(e) => setFormData({\n                    ...formData,\n                    propertyType: e.target.value,\n                  })}\n                  label=\"Property Type\"\n                >\n                  <MenuItem value=\"house\">House</MenuItem>\n                  <MenuItem value=\"flat\">Flat</MenuItem>\n                  <MenuItem value=\"bungalow\">Bungalow</MenuItem>\n                  <MenuItem value=\"maisonette\">Maisonette</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Property Value\"\n                value={formData.estimatedValue}\n                onChange={(e) => setFormData({\n                  ...formData,\n                  estimatedValue: e.target.value,\n                })}\n                InputProps={{\n                  startAdornment: '£',\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Loan Amount\"\n                value={formData.loanAmount}\n                onChange={(e) => setFormData({\n                  ...formData,\n                  loanAmount: e.target.value,\n                })}\n                InputProps={{\n                  startAdornment: '£',\n                }}\n              />\n            </Grid>\n          </Grid>\n        );\n\n      case 1:\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\" gutterBottom>\n                Your Personal Information\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"First Name\"\n                value={formData.firstName}\n                onChange={(e) => setFormData({\n                  ...formData,\n                  firstName: e.target.value,\n                })}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Last Name\"\n                value={formData.lastName}\n                onChange={(e) => setFormData({\n                  ...formData,\n                  lastName: e.target.value,\n                })}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Email\"\n                type=\"email\"\n                value={formData.email}\n                onChange={(e) => setFormData({\n                  ...formData,\n                  email: e.target.value,\n                })}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Phone\"\n                value={formData.phone}\n                onChange={(e) => setFormData({\n                  ...formData,\n                  phone: e.target.value,\n                })}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Date of Birth\"\n                type=\"date\"\n                value={formData.dateOfBirth}\n                onChange={(e) => setFormData({\n                  ...formData,\n                  dateOfBirth: e.target.value,\n                })}\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n          </Grid>\n        );\n\n      case 2:\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\" gutterBottom>\n                Employment Details\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <FormControl fullWidth>\n                <InputLabel>Employment Type</InputLabel>\n                <Select\n                  value={formData.employmentStatus}\n                  onChange={(e) => setFormData({\n                    ...formData,\n                    employmentStatus: e.target.value,\n                  })}\n                  label=\"Employment Type\"\n                >\n                  <MenuItem value=\"fullTime\">Full Time</MenuItem>\n                  <MenuItem value=\"partTime\">Part Time</MenuItem>\n                  <MenuItem value=\"selfEmployed\">Self Employed</MenuItem>\n                  <MenuItem value=\"contractor\">Contractor</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Employer Name\"\n                value={formData.employerName}\n                onChange={(e) => setFormData({\n                  ...formData,\n                  employerName: e.target.value,\n                })}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Length of Employment\"\n                value={formData.employmentLength}\n                onChange={(e) => setFormData({\n                  ...formData,\n                  employmentLength: e.target.value,\n                })}\n                helperText=\"e.g., 2 years 6 months\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Annual Income\"\n                value={formData.annualIncome}\n                onChange={(e) => setFormData({\n                  ...formData,\n                  annualIncome: e.target.value,\n                })}\n                InputProps={{\n                  startAdornment: '£',\n                }}\n              />\n            </Grid>\n          </Grid>\n        );\n\n      case 3:\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\" gutterBottom>\n                Financial Information\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Additional Income\"\n                value={formData.otherIncome}\n                onChange={(e) => setFormData({\n                  ...formData,\n                  otherIncome: e.target.value,\n                })}\n                InputProps={{\n                  startAdornment: '£',\n                }}\n                helperText=\"e.g., rental income, investments\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Deposit Amount\"\n                value={formData.depositAmount}\n                onChange={(e) => setFormData({\n                  ...formData,\n                  depositAmount: e.target.value,\n                })}\n                InputProps={{\n                  startAdornment: '£',\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Credit Score\"\n                value={formData.creditScore}\n                onChange={(e) => setFormData({\n                  ...formData,\n                  creditScore: e.target.value,\n                })}\n                helperText=\"If known (optional)\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={formData.existingMortgage.hasExistingMortgage}\n                    onChange={(e) => setFormData({\n                      ...formData,\n                      existingMortgage: {\n                        ...formData.existingMortgage,\n                        hasExistingMortgage: e.target.checked,\n                      },\n                    })}\n                  />\n                }\n                label=\"I have an existing mortgage\"\n              />\n            </Grid>\n            {formData.existingMortgage.hasExistingMortgage && (\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Existing Mortgage Details\"\n                  value={formData.existingMortgage.currentLender}\n                  onChange={(e) => setFormData({\n                    ...formData,\n                    existingMortgage: {\n                      ...formData.existingMortgage,\n                      currentLender: e.target.value,\n                    },\n                  })}\n                  multiline\n                  rows={3}\n                />\n              </Grid>\n            )}\n          </Grid>\n        );\n\n      case 4:\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\" gutterBottom>\n                Required Documents\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                Please prepare the following documents for your application:\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Card>\n                <CardContent>\n                  <Stack spacing={2}>\n                    <Typography variant=\"subtitle1\" color=\"primary\">\n                      Identity Documents\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      • Passport or driving license\n                      <br />\n                      • Recent utility bill (within last 3 months)\n                    </Typography>\n                  </Stack>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12}>\n              <Card>\n                <CardContent>\n                  <Stack spacing={2}>\n                    <Typography variant=\"subtitle1\" color=\"primary\">\n                      Financial Documents\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      • Last 3 months bank statements\n                      <br />\n                      • Last 3 months payslips\n                      <br />\n                      • P60 or tax return (if self-employed)\n                    </Typography>\n                  </Stack>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12}>\n              <Card>\n                <CardContent>\n                  <Stack spacing={2}>\n                    <Typography variant=\"subtitle1\" color=\"primary\">\n                      Property Documents\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      • Property details\n                      <br />\n                      • Current mortgage statement (if applicable)\n                    </Typography>\n                  </Stack>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      {showSuccess && (\n        <Alert severity=\"success\" sx={{ mb: 3 }}>\n          Your case has been created successfully! Redirecting to cases page...\n        </Alert>\n      )}\n\n      <Paper sx={{ p: 3 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          Create New Case\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\n          Please fill out the following information to create your mortgage case.\n        </Typography>\n\n        <Stepper activeStep={activeStep} sx={{ mb: 4 }}>\n          {steps.map((step, index) => (\n            <Step key={step.label}>\n              <StepLabel icon={step.icon}>\n                {step.label}\n              </StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n\n        <Box sx={{ mb: 4 }}>\n          {renderStepContent(activeStep)}\n        </Box>\n\n        <Divider sx={{ mb: 3 }} />\n\n        <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Button\n            variant=\"outlined\"\n            onClick={handleBack}\n            disabled={activeStep === 0}\n          >\n            Back\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={activeStep === steps.length - 1 ? handleSubmit : handleNext}\n          >\n            {activeStep === steps.length - 1 ? 'Submit' : 'Next'}\n          </Button>\n        </Box>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default CreateCase; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}